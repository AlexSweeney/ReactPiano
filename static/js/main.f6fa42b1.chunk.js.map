{"version":3,"sources":["audio/correctSound.mp3","audio/incorrectSound.mp3","audio/piano/mf/3/C3.mp3","audio/piano/mf/3/Db3.mp3","audio/piano/mf/3/D3.mp3","audio/piano/mf/3/Eb3.mp3","audio/piano/mf/3/E3.mp3","audio/piano/mf/3/F3.mp3","audio/piano/mf/3/Gb3.mp3","audio/piano/mf/3/G3.mp3","audio/piano/mf/3/Ab3.mp3","audio/piano/mf/3/A3.mp3","audio/piano/mf/3/Bb3.mp3","audio/piano/mf/3/B3.mp3","components/utils.js","components/AudioElements.jsx","components/parts/RadioSelector.jsx","components/ModeSelect.jsx","components/VolumeControl.jsx","components/parts/PlayButton.jsx","components/PianoDisplay.jsx","components/PianoControls.jsx","components/parts/Key.jsx","components/Octave.jsx","components/Keys.jsx","index.js","PianoApp.jsx"],"names":["module","exports","mapObject","object","fn","Array","isArray","objectsArray","o","forEach","targetObject","Object","keys","name","copyPropertiesAndValues","mergeObjects","map","key","getElements","ids","id","document","getElementById","getElement","getRandomArrayElement","array","range","length","Math","floor","random","AudioElements","setAudioIDs","pianoNotesAudio","C3","Db3","D3","Eb3","E3","F3","Gb3","G3","Ab3","A3","Bb3","B3","audio","correctSound","incorrectSound","audioElements","makeAudioTag","value","type","src","useEffect","element","props","className","RadioSelector","defaultValue","handleClick","isDefault","onClick","defaultChecked","for","replaceAll","ModeSelect","mode","setMode","modes","onClickRadio","thisMode","VolumeControl","audioIDs","volume","setVolume","min","max","onChange","e","target","newVolume","changeAudioElementVolumes","PlayButton","buttonDownClass","playButtonDown","PianoDisplay","displayString","showPlayButton","handlePlayButtonClick","output","PianoControls","Key","keyName","i","handleOver","handleOut","handleDown","keyColor","indexOf","style","left","width","realWhiteWidth","onMouseOver","onMouseOut","onMouseDown","Octave","octaveNum","octaveKeys","Keys","root","querySelector","ReactDOM","render","allKeys","useState","targetKey","setTargetKey","setDisplayString","setShowPlayButton","playButtonIsDown","setPlayButtonIsDown","onPressCorrect","playKeySound","flashKeyColor","setTimeout","playSound","onPressIncorrect","sound","pause","currentTime","play","generateTargetKey","allElements","getNewRandomArrayElement","classList","add","remove","flashColor","startSelectKeyMode","newTargetKey","startSelectByEar","correct","selectKey","selectKeyByEar"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,wRCCpC,SAASC,EAAUC,EAAQC,GAIjC,OAHGC,MAAMC,QAAQH,KAChBA,EAKF,SAAsBI,GACrB,IAAIC,EAAI,GAMR,OAJAD,EAAaE,SAAQ,SAACN,IAOvB,SAAiCO,EAAcP,GAC9CQ,OAAOC,KAAKT,GAAQM,SAAQ,SAACI,GAC5BH,EAAaG,GAAQV,EAAOU,MAR5BC,CAAwBN,EAAGL,MAGrBK,EAZGO,CAAaZ,IAEhBQ,OAAOC,KAAKT,GAAQa,KAAI,SAACC,GAAD,OAASb,EAAGa,EAAKd,EAAOc,OAoBjD,SAASC,EAAYC,GAC3B,OAAOA,EAAIH,KAAI,SAAAI,GAAE,OAGlB,SAAoBA,GACnB,OAAOC,SAASC,eAAeF,GAJVG,CAAWH,MAc1B,SAASI,EAAsBC,GACrC,OAAOA,GAGwBC,EAHFD,EAAME,OAI5BC,KAAKC,MAAMD,KAAKE,SAAWJ,KAD5B,IAAyBA,E,oPCvBjB,SAASK,EAAT,GAAuC,IAAfC,EAAc,EAAdA,YAQhCC,EAAkB,CAACC,OAAIC,QAAKC,OAAIC,QAAKC,OAAIC,OAAIC,QAAKC,OAAIC,QAAKC,OAAIC,QAAKC,QACpEC,EAAK,aAAIC,iBAAcC,oBAAmBf,GAC1CgB,EAYE/C,EAZgC4C,EAYRI,GAThC,SAASA,EAAajC,EAAKkC,GAC1B,OACC,2BAAO/B,GAAE,UAAKH,EAAL,UAAkBA,IAAKA,GAC/B,4BAAQmC,KAAK,YAAYC,IAAKF,KAkBjC,OALAG,qBAAU,WACTtB,EAA+BiB,EAJfjC,KAAI,SAAAuC,GAAO,OAAIA,EAAQC,MAAMpC,SAK3C,IAIF,yBAAKqC,UAAU,yBACbR,GCvDW,SAASS,EAAT,GAA4D,IAApCP,EAAmC,EAAnCA,MAAOQ,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,YACrDxC,EAAE,UAAM+B,EAAN,UACFU,EAAYV,IAAUQ,EAE5B,SAASG,IACRF,EAAYT,GAGb,OACC,yBAAKM,UAAU,iBAAiBxC,IAAKkC,GACpC,2BAAOC,KAAK,QACVvC,KAAK,OACLsC,MAAOA,EACP/B,GAAIA,EACJ0C,QAASA,EACTC,eAAgBF,IAElB,2BAAOG,IAAK5C,EAAI0C,QAASA,GAAUX,EAAMc,WAAW,IAAK,MACzD,8B,MChBY,SAASC,EAAT,GAAqC,EAAhBC,KAAiB,IAAXC,EAAU,EAAVA,QAOnCC,EAAQ,CAAC,WAAY,aAAc,qBACnCV,EAAeU,EAAM,GAG3B,SAASC,EAAanB,GACrBiB,EAAQjB,GAIT,OACC,0BAAMM,UAAU,eACf,oCAECY,EAAMrD,KAAI,SAAAuD,GACV,OAAO,kBAACb,EAAD,CAAeP,MAAOoB,EAAUZ,aAAcA,EAAcC,YAAaU,Q,MCrBrE,SAASE,EAAT,GAAuD,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,UAWxD,OACC,yBAAKlB,UAAU,4BACd,2BAAOL,KAAK,QAAQwB,IAAI,IAAIC,IAAI,MAAM1B,MAAOuB,EAAQI,SAZvD,SAAwBC,GACvBJ,EAAUI,EAAEC,OAAO7B,OAIpB,SAAmCsB,EAAUQ,GACxB/D,EAAYuD,GAClBhE,SAAQ,SAAA8C,GAAO,OAAIA,EAAQmB,OAASO,KALlDC,CAA0BT,EAAUC,EAAS,S,kBCHhC,SAASS,EAAT,GAAoD,IAA/BvB,EAA8B,EAA9BA,YAC7BwB,EAD2D,EAAjBC,eACP,mBAAqB,GAE9D,OACC,kBAAC,IAAD,CAAcvB,QAASF,EAAaH,UAAS,sBAAiB2B,GAAmBhE,GAAG,gB,MCHvE,SAASkE,EAAT,GAQX,IAPHC,EAOE,EAPFA,cACAC,EAME,EANFA,eACAC,EAKE,EALFA,sBACAJ,EAIE,EAJFA,eACAZ,EAGE,EAHFA,SACAC,EAEE,EAFFA,OACAC,EACE,EADFA,UAEMe,EAASF,EAAiB,kBAAC,EAAD,CAAY5B,YAAa6B,EAAuBJ,eAAgBA,IAAoBE,EAEpH,OACC,yBAAK9B,UAAU,2BACd,yBAAKA,UAAU,iBAEbiC,GAGF,kBAAC,EAAD,CACCjB,SAAUA,EACVC,OAAQA,EACRC,UAAWA,K,MCpBA,SAASgB,EAAT,GASI,IARlBxB,EAQiB,EARjBA,KACAC,EAOiB,EAPjBA,QACAmB,EAMiB,EANjBA,cACAb,EAKiB,EALjBA,OACAC,EAIiB,EAJjBA,UACAF,EAGiB,EAHjBA,SACAe,EAEiB,EAFjBA,eACAC,EACiB,EADjBA,sBACAJ,EAAiB,EAAjBA,eAEA,OACC,yBAAK5B,UAAU,kBACd,kBAAC,EAAD,CACCU,KAAMA,EACNC,QAASA,IAEV,kBAAC,EAAD,CACCmB,cAAeA,EACfC,eAAgBA,EAChBC,sBAAuBA,EACvBJ,eAAgBA,EAChBZ,SAAUA,EACVC,OAAQA,EACRC,UAAWA,K,MC3BA,SAASiB,EAAT,GAA+D,IAAjDC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,EAAGC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,WAEzD7E,EAAE,cAAUyE,GAUZK,GAUyB,GAVFL,EAUhBM,QAAQ,KAAgB,QAAU,QAPzCC,EAAQ,CACbC,KAAOP,GATe,GAGa,IANvB,GAYoB,KAChCQ,MAbY,IASmB,UAAbJ,EAJAK,EAFI,GAGa,IAGwC,MAa5E,OACC,yBAAK9C,UAAS,cAASyC,EAAT,QAAyB9E,GAAIA,EAAIgF,MAAOA,EACtDI,YAAa,kBAAMT,EAAWF,IAC9BY,WAAYT,EACZU,YAAa,kBAAMT,EAAWJ,M,MC7BjB,SAASc,EAAT,GAAqE,IAAD,IAAnDC,iBAAmD,MAAvC,EAAuC,EAApCb,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,WAG/DY,EADU,CAAC,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KACvC7F,KAAI,SAAAC,GAAG,gBAAOA,GAAP,OAAa2F,MAG/C,OACC,yBAAKnD,UAAU,UACboD,EAAW7F,KAAI,SAACC,EAAK6E,GACrB,OAAO,kBAAC,EAAD,CACFD,QAAS5E,EACT6E,EAAGA,EACHC,WAAYA,EACZC,UAAWA,EACXC,WAAYA,Q,MCdN,SAASa,EAAT,GAAoD,IAArCf,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,WACpD,OACC,yBAAKxC,UAAU,QACd,kBAAC,EAAD,CAAQsC,WAAYA,EAAYC,UAAWA,EAAWC,WAAYA,K,MCHrE,IAAIc,EAAO1F,SAAS2F,cAAc,SAElCC,IAASC,OACR,oCACC,mBCDa,WAUd,IAAMC,EAAU,CAAC,KAAK,MAAM,KAAK,MAAM,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,MAV9C,EAWGC,mBAAS,IAXZ,mBAWxBC,EAXwB,KAWbC,EAXa,OAcPF,mBAAS,YAdF,mBAcxBjD,EAdwB,KAclBC,EAdkB,OAiBWgD,mBAAS,IAjBpB,mBAiBxB7B,EAjBwB,KAiBTgC,EAjBS,OAoBCH,mBAAS,IApBV,mBAoBxB3C,EApBwB,KAoBdzC,EApBc,KAqBzBe,EAAe1B,SAASC,eAAe,sBACvC0B,EAAiB3B,SAASC,eAAe,wBAtBhB,EAyBa8F,oBAAS,GAzBtB,mBAyBxB5B,EAzBwB,KAyBRgC,EAzBQ,OA0BiBJ,oBAAS,GA1B1B,mBA0BxBK,EA1BwB,KA0BNC,EA1BM,OAiCHN,mBAAS,IAjCN,mBAiCxB1C,EAjCwB,KAiChBC,EAjCgB,KAuE/B,SAASgD,EAAe9B,GACvB+B,EAAa/B,GACbgC,EAAchC,EAAS,WAEvBiC,YAAW,WACVC,EAAUhF,KA/Ce,KAmD3B,SAASiF,EAAiBnC,GACzB+B,EAAa/B,GACbgC,EAAchC,EAAS,aAEvBiC,YAAW,WACVC,EAAU/E,KAxDe,KAgF3B,SAAS+E,EAAUE,GAClBA,EAAMC,QACND,EAAME,YAAc,EACpBF,EAAMG,OAGP,SAASR,EAAa/G,GACrB,IAAMO,EAAE,UAAMP,EAAN,UAERkH,EADqB1G,SAASC,eAAeF,IAI9C,SAASiH,IACR,OZhGK,SAAkCC,GACxC,OADwE,wDACjE9G,EAAsB8G,GY+FrBC,CAAyBpB,EAASE,GAG1C,SAASQ,EAAchC,EAASpC,IAKhC,SAAoBrC,EAAIqC,GACvB,IAAMF,EAAUlC,SAASC,eAAeF,GACxCmC,EAAQiF,UAAUC,IAAIhF,GAEtBqE,YAAW,WACVvE,EAAQiF,UAAUE,OAAOjF,KAzGC,KAiG3BkF,CADQ,cAAU9C,GACHpC,GAsBhB,SAASmF,IACR,IAAMC,EAAeR,IACrBf,EAAauB,GACbtB,EAAiBsB,GAiBlB,SAASC,IACR,IAAMD,EAAeR,IAErBf,EAAauB,GACbjB,EAAaiB,GAjCbnB,GAAoB,GAEpBI,YAAW,WACVJ,GAAoB,KAClB,KAgCHH,EAAiB,IAyBlB,OALAjE,qBAAU,WAzGTiE,EAAiB,IAEL,eAATpD,GACFyE,IAGW,sBAATzE,GACF2E,IAIAtB,EADW,sBAATrD,KAiGD,CAACA,IAIH,6BACC,kBAACpC,EAAD,CAAeC,YAAaA,IAE5B,yBAAKyB,UAAU,SACd,kBAAC,EAAD,CACCU,KAAMA,EACNC,QAASA,EACTmB,cAAeA,EACfb,OAAQA,EACRC,UAAWA,EACXF,SAAUA,EACVe,eAAgBA,EAChBC,sBApJJ,WACCmC,EAAaP,IAoJVhC,eAAgBoC,IAGjB,kBAAC,EAAD,CACC1B,WAtLJ,SAAmBF,GACN,aAAT1B,GACFoD,EAAiB1B,IAqLfG,UAhLJ,SAAkBH,GACL,aAAT1B,GACFoD,EAAiB,KA+KftB,WA1KJ,SAAmBJ,GACN,aAAT1B,GACFyD,EAAa/B,GAGF,eAAT1B,GAmGJ,SAAmB0B,GAClB,IAAMkD,EAAUlD,IAAYwB,EAEzB0B,IACFpB,EAAe9B,GAEfiC,YAAW,WACVc,MACE,MAEAG,GAASf,EAAiBnC,GA5G7BmD,CAAUnD,GAGC,sBAAT1B,GAuHJ,SAAwB0B,GACvB,IAAMkD,EAAUlD,IAAYwB,EAEzB0B,IACFvB,GAAkB,GAClBG,EAAe9B,GACf0B,EAAiB1B,GAEjBiC,YAAW,WACVgB,IACAtB,GAAkB,KAChB,MAEAuB,GAASf,EAAiBnC,GAnI7BoD,CAAepD,UD5DhB,OAEDkB,K","file":"static/js/main.f6fa42b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/correctSound.02882ce2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/incorrectSound.a41303f1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/C3.58b0cf5e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Db3.9e36e291.mp3\";","module.exports = __webpack_public_path__ + \"static/media/D3.2d262cf5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Eb3.8a189c54.mp3\";","module.exports = __webpack_public_path__ + \"static/media/E3.15ba0b83.mp3\";","module.exports = __webpack_public_path__ + \"static/media/F3.0016c64e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Gb3.bfe6320f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/G3.23448b11.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Ab3.3fd6228a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/A3.157fdb4e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Bb3.a4556a71.mp3\";","module.exports = __webpack_public_path__ + \"static/media/B3.ca302b66.mp3\";","// =================== Object\r\nexport function mapObject(object, fn) { \r\n\tif(Array.isArray(object)) { \r\n\t\tobject = mergeObjects(object);\r\n\t}  \r\n\treturn Object.keys(object).map((key) => fn(key, object[key]));  \r\n}\r\n\r\nfunction mergeObjects(objectsArray) {\r\n\tlet o = {}; \r\n\t\r\n\tobjectsArray.forEach((object) => { \r\n\t\tcopyPropertiesAndValues(o, object);\r\n\t})\t\r\n\r\n\treturn o;\r\n}\r\n\r\nfunction copyPropertiesAndValues(targetObject, object) {\r\n\tObject.keys(object).forEach((name) => {\r\n\t\ttargetObject[name] = object[name];\r\n\t});\r\n}\r\n\r\n// =================== Elements\r\nexport function getElements(ids) { \r\n\treturn ids.map(id => getElement(id))\r\n}\r\n\r\nfunction getElement(id) {\r\n\treturn document.getElementById(id)\r\n}\r\n\r\nexport function getNewRandomArrayElement(allElements, oldElement = null) {  \r\n\treturn getRandomArrayElement(allElements)\r\n\t// let newElement = getRandomArrayElement(allElements);\r\n\t// if(newElement === oldElement) return getNewRandomArrayElement(allElements, oldElement);\r\n\t//(newElement !== oldElement) return newElement;\r\n}\r\n\r\nexport function getRandomArrayElement(array) { \r\n\treturn array[getRandomNumber(array.length)];\r\n}\r\n\r\nexport function getRandomNumber(range) {\r\n\treturn Math.floor(Math.random() * range);\r\n}","import React, {useEffect} from 'react';\r\nimport {mapObject} from './utils.js';\r\n\r\n// Sounds\r\nimport correctSound from './../audio/correctSound.mp3';\r\nimport incorrectSound from './../audio/incorrectSound.mp3'; \r\n\r\n// Keys\r\nimport C3 from './../audio/piano/mf/3/C3.mp3';\r\nimport Db3 from './../audio/piano/mf/3/Db3.mp3';\r\nimport D3 from './../audio/piano/mf/3/D3.mp3';\r\nimport Eb3 from './../audio/piano/mf/3/Eb3.mp3';\r\nimport E3 from './../audio/piano/mf/3/E3.mp3';\r\nimport F3 from './../audio/piano/mf/3/F3.mp3';\r\nimport Gb3 from './../audio/piano/mf/3/Gb3.mp3';\r\nimport G3 from './../audio/piano/mf/3/G3.mp3';\r\nimport Ab3 from './../audio/piano/mf/3/Ab3.mp3';\r\nimport A3 from './../audio/piano/mf/3/A3.mp3';\r\nimport Bb3 from './../audio/piano/mf/3/Bb3.mp3';\r\nimport B3 from './../audio/piano/mf/3/B3.mp3';\r\n\r\nexport default function AudioElements({setAudioIDs}) {  \r\n\t/* \r\n\t\t* render audio elements for piano notes and feedback sounds\r\n\t\r\n\t\t* set audio ids on render\r\n\t*/\r\n\r\n\t// ============================ Constants ============================ //\r\n\tconst pianoNotesAudio = {C3, Db3, D3, Eb3, E3, F3, Gb3, G3, Ab3, A3, Bb3, B3};\r\n\tconst audio = {correctSound, incorrectSound, ...pianoNotesAudio};\r\n\tconst audioElements = makeAudioElements(audio);\r\n\t\r\n\t// ============================ Functions ============================ //\r\n\tfunction makeAudioTag(key, value) { \r\n\t\treturn (\r\n\t\t\t<audio id={`${key}_audio`} key={key}>\r\n\t\t\t\t<source type=\"audio/mp3\" src={value}/>\r\n\t\t\t</audio> \r\n\t\t)\r\n\t}   \r\n\r\n\tfunction makeAudioElements(audioObjects) {   \r\n\t\treturn mapObject(audioObjects, makeAudioTag); \r\n\t} \r\n\r\n\tfunction getIDsFromElements(elements) {\r\n\t\treturn elements.map(element => element.props.id);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetAudioIDs(getIDsFromElements(audioElements));\r\n\t}, []); \r\n\r\n\t// ============================ Output ============================ //\r\n\treturn (\r\n\t\t<div className=\"audioElementContainer\">\r\n\t\t\t{audioElements}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function RadioSelector({value, defaultValue, handleClick}) {\r\n\tconst id = `${value}_Radio`;\r\n\tconst isDefault = value === defaultValue;\r\n\r\n\tfunction onClick() {\r\n\t\thandleClick(value)\r\n\t} \r\n\r\n\treturn (\r\n\t\t<div className=\"radio-selector\" key={value}>\r\n\t\t\t<input type=\"radio\" \r\n\t\t\t\t\tname=\"mode\"\r\n\t\t\t\t\tvalue={value} \r\n\t\t\t\t\tid={id} \r\n\t\t\t\t\tonClick={onClick}\r\n\t\t\t\t\tdefaultChecked={isDefault}\r\n\t\t\t/>\r\n\t\t\t<label for={id} onClick={onClick}>{value.replaceAll('-', ' ')}</label>\r\n\t\t\t<br/> \r\n\t\t</div> \r\n\t)\r\n}","import React, {useEffect} from 'react';\r\nimport RadioSelector from './parts/RadioSelector.jsx';\r\nimport './ModeSelect.css';\r\n\r\nexport default function ModeSelect({mode, setMode}) {\r\n\t/*\r\n\t\t* Show modes\r\n\t\t* change mode on click\r\n\t*/\r\n\r\n\t// ========================== Constants  ========================= // \r\n\tconst modes = ['show-key', 'select-key', 'select-key-by-ear'];\r\n\tconst defaultValue = modes[0]; \r\n\r\n\t// ========================== Event Handlers  ==================== // \r\n\tfunction onClickRadio(value) {\r\n\t\tsetMode(value)\r\n\t} \r\n\r\n\t// ========================== Output  =========================== // \r\n\treturn (\r\n\t\t<form className=\"mode-select\">  \r\n\t\t\t<h2>Mode</h2>  \r\n\t\t\t\r\n\t\t\t{modes.map(thisMode => {\r\n\t\t\t\treturn <RadioSelector value={thisMode} defaultValue={defaultValue} handleClick={onClickRadio}/>\r\n\t\t\t})}\r\n\t\t</form>\r\n\t) \r\n}","import React from 'react';\r\nimport {getElements} from './utils.js';\r\nimport './VolumeControl.css';\r\n\r\nexport default function VolumeControl({audioIDs, volume, setVolume}) { \r\n\tfunction onSliderChange(e) {  \r\n\t\tsetVolume(e.target.value);  \r\n\t\tchangeAudioElementVolumes(audioIDs, volume / 100); \r\n\t}   \r\n \r\n\tfunction changeAudioElementVolumes(audioIDs, newVolume) {\r\n\t\tlet audioElements = getElements(audioIDs);\r\n\t\taudioElements.forEach(element => element.volume = newVolume);\r\n\t}\r\n\r\n\treturn( \r\n\t\t<div className=\"volume-control-container\">\r\n\t\t\t<input type=\"range\" min=\"0\" max=\"100\" value={volume} onChange={onSliderChange}/>\r\n\t\t</div>\r\n\t)\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { FaPlayCircle } from 'react-icons/fa';\r\nimport './PlayButton.css';\r\n\r\nexport default function PlayButton({handleClick, playButtonDown}) { \r\n\tconst buttonDownClass = playButtonDown ? 'play-button-down' : '';\r\n\r\n\treturn (\r\n\t\t<FaPlayCircle onClick={handleClick} className={`play-button ${buttonDownClass}`} id=\"play-button\"/>\r\n\t)\r\n}","import React from 'react';\r\nimport VolumeControl from './VolumeControl.jsx';\r\nimport PlayButton from './parts/PlayButton.jsx';\r\nimport './PianoDisplay.css';\r\n\r\nexport default function PianoDisplay({\r\n\tdisplayString, \r\n\tshowPlayButton, \r\n\thandlePlayButtonClick,\r\n\tplayButtonDown,\r\n\taudioIDs,\r\n\tvolume,\r\n\tsetVolume,\r\n}) {\r\n\tconst output = showPlayButton ? <PlayButton handleClick={handlePlayButtonClick} playButtonDown={playButtonDown}/> : displayString;\r\n\r\n\treturn (\r\n\t\t<div className=\"piano-display-container\">\r\n\t\t\t<div className=\"piano-display\">\r\n\t\t\t\t{\r\n\t\t\t\t\toutput\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<VolumeControl\r\n\t\t\t\taudioIDs={audioIDs}\r\n\t\t\t\tvolume={volume}\r\n\t\t\t\tsetVolume={setVolume}\r\n\t\t\t/> \r\n\t\t</div>\r\n\t) \r\n}\t","import React from 'react';\r\nimport ModeSelect from './ModeSelect.jsx';\r\nimport PianoDisplay from './PianoDisplay.jsx';\r\n\r\nimport './PianoControls.css';\r\n\r\nexport default function PianoControls({\r\n\tmode, \r\n\tsetMode, \r\n\tdisplayString, \r\n\tvolume, \r\n\tsetVolume, \r\n\taudioIDs, \r\n\tshowPlayButton, \r\n\thandlePlayButtonClick,\r\n\tplayButtonDown}) {\r\n\r\n\treturn( \r\n\t\t<div className=\"piano-controls\"> \r\n\t\t\t<ModeSelect\r\n\t\t\t\tmode={mode}\r\n\t\t\t\tsetMode={setMode} \r\n\t\t\t/>\r\n\t\t\t<PianoDisplay \r\n\t\t\t\tdisplayString={displayString} \r\n\t\t\t\tshowPlayButton={showPlayButton} \r\n\t\t\t\thandlePlayButtonClick={handlePlayButtonClick}\r\n\t\t\t\tplayButtonDown={playButtonDown}\r\n\t\t\t\taudioIDs={audioIDs}\r\n\t\t\t\tvolume={volume}\r\n\t\t\t\tsetVolume={setVolume} \r\n\t\t\t/>\t \r\n\t\t</div> \r\n\t)\r\n}","import React from 'react';\r\nimport './Key.css';\r\n\r\nexport default function Key({keyName, i, handleOver, handleOut, handleDown}) { \r\n\t// =========================== const =========================== //   \r\n\tconst id = `key-${keyName}`;\r\n\r\n\tconst size = 39;\r\n\r\n\tconst realWhiteWidth = 24;\r\n\tconst realBlackWidth = 14;\r\n\r\n\tconst whiteWidth = realWhiteWidth / 24;\r\n\tconst blackWidth = realBlackWidth / 24;\r\n\r\n\tconst keyColor = getKeyColor(keyName);\r\n\tconst thisWidth = (keyColor === 'white' ? whiteWidth : blackWidth) * size + 'px';\r\n\r\n\tconst style = {\r\n\t\tleft: (i * blackWidth) * size + 'px',\r\n\t\twidth: thisWidth,\r\n\t}   \r\n\t// =========================== Helper Fns ===================== //\r\n\t// ================ Color\r\n\tfunction getKeyColor(key) {\r\n\t\treturn (key.indexOf('b') == - 1 ) ? 'white' : 'black';\r\n\t}\r\n\r\n\t// =========================== Output ===================== //\r\n\treturn (  \r\n\t\t<div className={`key ${keyColor}-key`} id={id} style={style}\r\n\t\tonMouseOver={() => handleOver(keyName)}\r\n\t\tonMouseOut={handleOut}\r\n\t\tonMouseDown={() => handleDown(keyName)}></div>\r\n\t)\r\n}","import React from 'react';\r\nimport Key from './parts/Key.jsx';\r\nimport './Octave.css';\r\n\r\nexport default function Octave({octaveNum = 3, handleOver, handleOut, handleDown}) {\r\n\t// ================ constants ===================== //\r\n\tconst allKeys = ['C','Db','D','Eb','E','F','Gb','G','Ab','A','Bb','B'];\r\n\tconst octaveKeys = allKeys.map(key => `${key}${octaveNum}`);\r\n\r\n\t// ================ Output ==================== //\r\n\treturn (\r\n\t\t<div className=\"octave\">\r\n\t\t\t{octaveKeys.map((key, i) => { \r\n\t\t\t\treturn <Key \r\n\t\t\t\t\t\t\t\t\tkeyName={key} \r\n\t\t\t\t\t\t\t\t\ti={i}\r\n\t\t\t\t\t\t\t\t\thandleOver={handleOver}\r\n\t\t\t\t\t\t\t\t\thandleOut={handleOut}\r\n\t\t\t\t\t\t\t\t\thandleDown={handleDown}/>\r\n\t\t\t})} \r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\nimport Octave from './Octave.jsx';\r\nimport './Keys.css';\r\n\r\nexport default function Keys({handleOver, handleOut, handleDown}) {\r\n\treturn(\r\n\t\t<div className=\"keys\"> \r\n\t\t\t<Octave handleOver={handleOver} handleOut={handleOut} handleDown={handleDown}/>\t \r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Piano from \"./PianoApp.jsx\";\r\n\r\nvar root = document.querySelector(\"#root\");\r\n\r\nReactDOM.render(\r\n\t<>\r\n\t\t<Piano/>\r\n\t</>,\r\n\troot\r\n);","import React, {useState, useEffect} from 'react';\r\nimport {getNewRandomArrayElement} from './components/utils.js';\r\nimport AudioElements from './components/AudioElements.jsx';\r\nimport PianoControls from './components/PianoControls.jsx';\r\nimport Keys from './components/Keys.jsx'; \r\nimport './PianoApp.css';  \r\n \r\nexport default function Piano() {\r\n\t/*\r\n\t\t* show controls with mode selector\r\n\t\t* show feedback window\r\n\t\t* show piano keys\r\n\t\t* handle key events based on mode\r\n\t*/\r\n\r\n\t// ================================== Constants =========================== //\r\n\t// =================== Keys\r\n\tconst allKeys = ['C3','Db3','D3','Eb3','E3','F3','Gb3','G3','Ab3','A3','Bb3','B3']; \r\n\tconst [targetKey, setTargetKey] = useState('');\r\n\t\r\n\t// =================== Mode Select\r\n\tconst [mode, setMode] = useState('show-key'); \r\n\r\n\t// =================== Display\r\n\tconst [displayString, setDisplayString] = useState('');\r\n\r\n\t// =================== Audio\r\n\tconst [audioIDs, setAudioIDs] = useState([]);\r\n\tconst correctSound = document.getElementById('correctSound_audio');\r\n\tconst incorrectSound = document.getElementById('incorrectSound_audio');\r\n\r\n\t// =================== Play Button\r\n\tconst [showPlayButton, setShowPlayButton] = useState(false); \r\n\tconst [playButtonIsDown, setPlayButtonIsDown] = useState(false);\r\n\r\n\t// =================== Delays\r\n\tconst feedbackSoundDelay = 750;\t\r\n\tconst colorHightLightTime = 1000;\r\n\r\n\t// ===================  Volume Control\r\n\tconst [volume, setVolume] = useState(30); \r\n\r\n\t// ================================== Event Handlers =========================== //\r\n\t// ============= key over\r\n\tfunction onKeyOver(keyName) { \r\n\t\tif(mode === 'show-key') {\r\n\t\t\tsetDisplayString(keyName)\r\n\t\t} \r\n\t}\r\n\r\n\t// ============= key out \r\n\tfunction onKeyOut(keyName) {\r\n\t\tif(mode === 'show-key') {\r\n\t\t\tsetDisplayString('')\r\n\t\t}\r\n\t}\r\n\r\n\t// ============= key down\r\n\tfunction onKeyDown(keyName) {\r\n\t\tif(mode === 'show-key') {\r\n\t\t\tplayKeySound(keyName)\r\n\t\t}\r\n\r\n\t\tif(mode === 'select-key') {\r\n\t\t\tselectKey(keyName)\r\n\t\t}\r\n\r\n\t\tif(mode === 'select-key-by-ear') {\r\n\t\t\tselectKeyByEar(keyName)\r\n\t\t}\r\n\t}\r\n\r\n\t// ============= play button\r\n\tfunction onPlayButtonClick() {\r\n\t\tplayKeySound(targetKey)\r\n\t}\r\n\r\n\t// ============= press correct\r\n\tfunction onPressCorrect(keyName) { \r\n\t\tplayKeySound(keyName)\r\n\t\tflashKeyColor(keyName, 'correct')\r\n\t\t\r\n\t\tsetTimeout(() => {\r\n\t\t\tplaySound(correctSound)\r\n\t\t}, feedbackSoundDelay) \r\n\t}\r\n\r\n\tfunction onPressIncorrect(keyName) { \r\n\t\tplayKeySound(keyName)\r\n\t\tflashKeyColor(keyName, 'incorrect')\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tplaySound(incorrectSound)\r\n\t\t}, feedbackSoundDelay) \r\n\t} \r\n\r\n\t// ============= mode change\r\n\tfunction onChangeMode() {\r\n\t\tsetDisplayString('')\r\n\r\n\t\tif(mode === 'select-key') {\r\n\t\t\tstartSelectKeyMode()\r\n\t\t}\r\n\r\n\t\tif(mode === 'select-key-by-ear') {\r\n\t\t\tstartSelectByEar()\r\n\t\t}\r\n\r\n\t\tif(mode === 'select-key-by-ear') {\r\n\t\t\tsetShowPlayButton(true)\r\n\t\t} else {\r\n\t\t\tsetShowPlayButton(false)\r\n\t\t}\r\n\t}\r\n\r\n\t// ================================== Helper fns =========================== //\r\n\tfunction playSound(sound) {\r\n\t\tsound.pause();\r\n\t\tsound.currentTime = 0;\r\n\t\tsound.play()\r\n\t}\r\n\r\n\tfunction playKeySound(name) { \r\n\t\tconst id = `${name}_audio`;\r\n\t\tconst audioElement = document.getElementById(id);\r\n\t\tplaySound(audioElement)\r\n\t}\r\n\r\n\tfunction generateTargetKey() {\r\n\t\treturn getNewRandomArrayElement(allKeys, targetKey);   \r\n\t}\r\n\r\n\tfunction flashKeyColor(keyName, className) {\r\n\t\tconst id = `key-${keyName}`;\r\n\t\tflashColor(id, className)\r\n\t}\r\n\r\n\tfunction flashColor(id, className) {\r\n\t\tconst element = document.getElementById(id); \r\n\t\telement.classList.add(className)\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\telement.classList.remove(className)\r\n\t\t}, colorHightLightTime) \r\n\t}\r\n\r\n\tfunction flashPlayButtonColor() {\r\n\t\tsetPlayButtonIsDown(true)\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetPlayButtonIsDown(false)\r\n\t\t}, 1000)\r\n\t}\r\n\r\n\t// ================================== Mode fns =========================== //\r\n\t// ====================== Select Key Mode\r\n\tfunction startSelectKeyMode() {\r\n\t\tconst newTargetKey = generateTargetKey();\r\n\t\tsetTargetKey(newTargetKey) \r\n\t\tsetDisplayString(newTargetKey)\r\n\t}\r\n\r\n\tfunction selectKey(keyName) {\r\n\t\tconst correct = keyName === targetKey;\r\n\r\n\t\tif(correct) {\r\n\t\t\tonPressCorrect(keyName)\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tstartSelectKeyMode()\r\n\t\t\t}, 2000) \r\n\t\t}\r\n\t\tif(!correct) onPressIncorrect(keyName)\r\n\t} \r\n\r\n\t// ====================== Select By Ear Mode\r\n\tfunction startSelectByEar() {\r\n\t\tconst newTargetKey = generateTargetKey();\r\n\t\t\r\n\t\tsetTargetKey(newTargetKey) \r\n\t\tplayKeySound(newTargetKey) \r\n\t\tflashPlayButtonColor()\r\n\r\n\t\tsetDisplayString('')\r\n\t}\r\n\r\n\tfunction selectKeyByEar(keyName) {\r\n\t\tconst correct = keyName === targetKey;\r\n\r\n\t\tif(correct) {\r\n\t\t\tsetShowPlayButton(false)\r\n\t\t\tonPressCorrect(keyName)\r\n\t\t\tsetDisplayString(keyName)\r\n\t\t\t\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tstartSelectByEar()\r\n\t\t\t\tsetShowPlayButton(true)\r\n\t\t\t}, 3000)\r\n\t\t}\r\n\t\tif(!correct) onPressIncorrect(keyName)\r\n\t}\r\n \r\n\t// ================================== Listen / Trigger =========================== //\r\n\tuseEffect(() => {\r\n\t\tonChangeMode()\r\n\t}, [mode])  \r\n\r\n\t// ================================== Output =========================== //\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<AudioElements setAudioIDs={setAudioIDs}/>\r\n\t\t\t\r\n\t\t\t<div className=\"piano\">  \r\n\t\t\t\t<PianoControls\r\n\t\t\t\t\tmode={mode}\r\n\t\t\t\t\tsetMode={setMode}\r\n\t\t\t\t\tdisplayString={displayString}\r\n\t\t\t\t\tvolume={volume}\r\n\t\t\t\t\tsetVolume={setVolume}\r\n\t\t\t\t\taudioIDs={audioIDs}\r\n\t\t\t\t\tshowPlayButton={showPlayButton}\r\n\t\t\t\t\thandlePlayButtonClick={onPlayButtonClick}\r\n\t\t\t\t\tplayButtonDown={playButtonIsDown}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Keys\r\n\t\t\t\t\thandleOver={onKeyOver}\r\n\t\t\t\t\thandleOut={onKeyOut}\r\n\t\t\t\t\thandleDown={onKeyDown}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};"],"sourceRoot":""}